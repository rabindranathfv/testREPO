!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/material"),require("@angular/common")):"function"==typeof define&&define.amd?define("material-dynamic-table",["exports","@angular/core","@angular/material","@angular/common"],e):e(t["material-dynamic-table"]={},t.ng.core,t.ng.material,t.ng.common)}(this,function(t,e,i,r){"use strict";var a=function f(){},n=function(){function t(){this.registeredFilters={}}return t.prototype.registerFilter=function(t,e){this.registeredFilters[t]=e},t.prototype.getFilter=function(t){return this.registeredFilters[t]},t}(),o=function(){function t(t,e){this.columnFilterService=t,this.dialog=e,this.pageSize=20,this.pageSizeOptions=[20,50,100],this.showFilters=!0,this.stickyHeader=!1,this.appliedFilters={}}return t.prototype.ngOnInit=function(){var r=this;if(null==this.dataSource)throw Error("DynamicTable must be provided with data source.");if(null==this.columns)throw Error("DynamicTable must be provided with column definitions.");this.paginator===undefined&&(this.paginator=this.internalPaginator),this.displayedColumns=this.columns.map(function(t,e){return r.prepareColumnName(t.name,e)});var t=this.dataSource;t.sort=this.sort,t.paginator=this.paginator},t.prototype.isUsingInternalPaginator=function(){return this.paginator===this.internalPaginator},t.prototype.canFilter=function(t){return null!=this.columnFilterService.getFilter(t.type)},t.prototype.isFiltered=function(t){return this.appliedFilters[t.name]},t.prototype.getFilterDescription=function(t){var e=this.appliedFilters[t.name];return e&&e.getDescription?e.getDescription():null},t.prototype.prepareColumnName=function(t,e){return t||"col"+e},t.prototype.filter=function(e){var r=this,t=this.columnFilterService.getFilter(e.type);if(t){var n=new i.MatDialogConfig,o=new a;o.column=e,this.appliedFilters[e.name]&&(o.filter=Object.create(this.appliedFilters[e.name])),n.data=o,this.dialog.open(t,n).afterClosed().subscribe(function(t){t?r.appliedFilters[e.name]=t:""===t&&delete r.appliedFilters[e.name],(t||""===t)&&r.updateDataSource()})}},t.prototype.clearFilters=function(){this.appliedFilters={},this.updateDataSource()},t.prototype.updateDataSource=function(){this.dataSource.filters=this.getFilters()},t.prototype.getFilters=function(){var e=this.appliedFilters;return Object.keys(e).map(function(t){return e[t]})},t.prototype.getFilter=function(t){var e=this.getColumnByName(t);if(!e)throw Error("Column with name '"+t+"' does not exist.");return this.appliedFilters[e.name]},t.prototype.setFilter=function(t,e){var r=this.getColumnByName(t);if(!r)throw Error("Cannot set filter for a column. Column with name '"+t+"' does not exist.");this.appliedFilters[r.name]=e,this.updateDataSource()},t.prototype.getColumnByName=function(e){return this.columns.find(function(t){return(t.name?t.name.toLowerCase():t.name)===(e?e.toLowerCase():e)})},t.decorators=[{type:e.Component,args:[{selector:"mdt-dynamic-table",template:'<table mat-table [dataSource]="dataSource"\r\n       matSort matSortDirection="asc">\r\n\r\n  <ng-container *ngFor="let column of columns; let i = index" matColumnDef="{{ prepareColumnName(column.name, i) }}"\r\n                [sticky]="column.sticky === \'start\'" [stickyEnd]="column.sticky === \'end\'">\r\n    <th mat-header-cell *matHeaderCellDef mat-sort-header="{{ prepareColumnName(column.name, i) }}" [disabled]="!column.name || column.sort === false">\r\n      {{ column.displayName }}\r\n      <button class="mat-sort-header-button" *ngIf="showFilters && canFilter(column)"\r\n              (click)="filter(column); $event.stopPropagation();"\r\n              matTooltip="{{ getFilterDescription(column) }}" matTooltipDisabled="{{ !getFilterDescription(column) }}">\r\n        <mat-icon color="{{ isFiltered(column) ? \'primary\' : \'default\' }}">filter_list</mat-icon>\r\n      </button>\r\n    </th>\r\n    <td mat-cell *matCellDef="let row"><mdt-table-cell [row]="row" [column]="column"></mdt-table-cell></td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef="displayedColumns; sticky: [stickyHeader]"></tr>\r\n  <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\r\n</table>\r\n<mat-paginator [hidden]="!isUsingInternalPaginator()" [pageSize]="pageSize"\r\n               [pageSizeOptions]="pageSizeOptions">\r\n</mat-paginator>',styles:["table{width:100%}th .mat-icon.mat-default{opacity:.54}th .mat-icon.mat-default:hover{opacity:1}[hidden]{display:none}"]}]}],t.ctorParameters=function(){return[{type:n},{type:i.MatDialog}]},t.propDecorators={columns:[{type:e.Input}],dataSource:[{type:e.Input}],pageSize:[{type:e.Input}],pageSizeOptions:[{type:e.Input}],showFilters:[{type:e.Input}],stickyHeader:[{type:e.Input}],paginator:[{type:e.Input}],sort:[{type:e.ViewChild,args:[i.MatSort]}],internalPaginator:[{type:e.ViewChild,args:[i.MatPaginator]}]},t}(),l=function(){function t(t){this.viewContainerRef=t}return t.decorators=[{type:e.Directive,args:[{selector:"[mdtCellHost]"}]}],t.ctorParameters=function(){return[{type:e.ViewContainerRef}]},t}(),s=function(){function t(){}return t.decorators=[{type:e.Component,args:[{selector:"mdt-text-cell",template:"{{ row[column.name] }}"}]}],t.propDecorators={column:[{type:e.Input}],row:[{type:e.Input}]},t}(),c=function(){function t(){this.registeredCells={}}return t.prototype.registerCell=function(t,e){this.registeredCells[t]=e},t.prototype.getCell=function(t){var e=this.registeredCells[t];return null==e?s:e},t}(),p=function(){function t(t,e){this.cellService=t,this.componentFactoryResolver=e}return t.prototype.ngOnInit=function(){this.initCell()},t.prototype.initCell=function(){var t=this.cellService.getCell(this.column.type),e=this.componentFactoryResolver.resolveComponentFactory(t),r=this.cellHost.viewContainerRef;r.clear();var n=r.createComponent(e).instance;n.row=this.row,n.column=this.column},t.decorators=[{type:e.Component,args:[{selector:"mdt-table-cell",template:"<ng-template mdtCellHost></ng-template>"}]}],t.ctorParameters=function(){return[{type:c},{type:e.ComponentFactoryResolver}]},t.propDecorators={cellHost:[{type:e.ViewChild,args:[l]}],row:[{type:e.Input}],column:[{type:e.Input}]},t}(),u=function h(){},m=function(){function t(){this.dateFormat="short"}return t.prototype.ngOnInit=function(){this.column.options&&this.column.options.dateFormat&&(this.dateFormat=this.column.options.dateFormat)},t.decorators=[{type:e.Component,args:[{selector:"mdt-date-cell",template:"{{ row[column.name] | date:dateFormat }}"}]}],t.propDecorators={column:[{type:e.Input}],row:[{type:e.Input}]},t}(),d=function(){function t(t){(this.cellService=t).registerCell("string",s),t.registerCell("date",m)}return t.decorators=[{type:e.NgModule,args:[{imports:[r.CommonModule,i.MatTableModule,i.MatSortModule,i.MatPaginatorModule,i.MatIconModule,i.MatDialogModule,i.MatTooltipModule],declarations:[o,p,l,s,m],exports:[o],entryComponents:[s,m],providers:[c,n]}]}],t.ctorParameters=function(){return[{type:c}]},t}();t.DynamicTableComponent=o,t.CellService=c,t.CellDirective=l,t.ColumnFilterService=n,t.ColumnFilter=a,t.ColumnConfig=u,t.DynamicTableModule=d,t.ɵc=m,t.ɵb=s,t.ɵa=p,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=material-dynamic-table.umd.min.js.map
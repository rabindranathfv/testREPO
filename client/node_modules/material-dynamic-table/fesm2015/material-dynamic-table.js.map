{"version":3,"file":"material-dynamic-table.js.map","sources":["ng://material-dynamic-table/lib/column-filter.model.ts","ng://material-dynamic-table/lib/table-cell/cell-types/column-filter.service.ts","ng://material-dynamic-table/lib/dynamic-table.component.ts","ng://material-dynamic-table/lib/table-cell/cell.directive.ts","ng://material-dynamic-table/lib/column-config.model.ts","ng://material-dynamic-table/lib/table-cell/cell-types/text-cell.component.ts","ng://material-dynamic-table/lib/table-cell/cell-types/cell.service.ts","ng://material-dynamic-table/lib/table-cell/table-cell.component.ts","ng://material-dynamic-table/lib/table-cell/cell-types/date-cell.component.ts","ng://material-dynamic-table/lib/dynamic-table.module.ts"],"sourcesContent":["import { ColumnConfig } from './column-config.model';\n\nexport class ColumnFilter {\n    column: ColumnConfig;\n    filter: any;\n}","import { Type } from '@angular/core';\n\nexport class ColumnFilterService {\n\n    private registeredFilters: { [key: string]: Type<any>; } = {};\n    \n    registerFilter(type: string, component: Type<any>) {\n        this.registeredFilters[type] = component;\n    }\n\n    getFilter(type: string): Type<any> {\n        const component = this.registeredFilters[type];\n        \n        return component;\n    }\n}","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { MatSort, MatPaginator, MatDialog, MatDialogConfig } from '@angular/material';\nimport { DataSource } from '@angular/cdk/table';\nimport { ColumnConfig } from './column-config.model';\nimport { ColumnFilter } from './column-filter.model';\nimport { ColumnFilterService } from './table-cell/cell-types/column-filter.service';\n\n@Component({\n  selector: 'mdt-dynamic-table',\n  templateUrl: './dynamic-table.component.html',\n  styleUrls: ['./dynamic-table.component.css']\n})\nexport class DynamicTableComponent implements OnInit {\n\n  @Input() columns: ColumnConfig[];\n  @Input() dataSource: DataSource<any>;\n  @Input() pageSize = 20;\n  @Input() pageSizeOptions = [20, 50, 100];\n  @Input() showFilters = true;\n  @Input() stickyHeader = false;\n  @Input() paginator: MatPaginator;\n\n  displayedColumns: string[];\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) private internalPaginator: MatPaginator;\n\n  private appliedFilters: { [key: string]: any; } = {};\n\n  constructor(private readonly columnFilterService: ColumnFilterService, private readonly dialog: MatDialog) { }\n\n  ngOnInit() {\n    if (this.dataSource == null) {\n      throw Error('DynamicTable must be provided with data source.');\n    }\n    if (this.columns == null) {\n      throw Error('DynamicTable must be provided with column definitions.');\n    }\n\n    if (this.paginator === undefined) {\n      this.paginator = this.internalPaginator;\n    }\n\n    this.displayedColumns = this.columns.map((column, index) => this.prepareColumnName(column.name, index));\n\n    const dataSource = this.dataSource as any;\n    dataSource.sort = this.sort;\n    dataSource.paginator = this.paginator;\n  }\n\n  isUsingInternalPaginator() {\n    return this.paginator === this.internalPaginator;\n  }\n\n  canFilter(column: ColumnConfig) {\n    const filter = this.columnFilterService.getFilter(column.type);\n\n    return filter != null;\n  }\n\n  isFiltered(column: ColumnConfig) {\n    return this.appliedFilters[column.name];\n  }\n\n  getFilterDescription(column: ColumnConfig) {\n    const filter = this.appliedFilters[column.name];\n    if (!filter || !filter.getDescription) {\n      return null;\n    }\n\n    return filter.getDescription();\n  }\n\n  prepareColumnName(name: string, columnNumber: number) {\n    return name || 'col' + columnNumber;\n  }\n\n  filter(column: ColumnConfig) {\n    const filter = this.columnFilterService.getFilter(column.type);\n\n    if (filter) {\n      const dialogConfig = new MatDialogConfig();\n      const columnFilter = new ColumnFilter();\n      columnFilter.column = column;\n\n      if (this.appliedFilters[column.name]) {\n        columnFilter.filter = Object.create(this.appliedFilters[column.name]);\n      }\n\n      dialogConfig.data = columnFilter;\n\n      const dialogRef = this.dialog.open(filter, dialogConfig);\n\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.appliedFilters[column.name] = result;\n        } else if (result === '') {\n          delete this.appliedFilters[column.name];\n        }\n\n        if (result || result === '') {\n          this.updateDataSource();\n        }\n      });\n    }\n  }\n\n  clearFilters() {\n    this.appliedFilters = {};\n    this.updateDataSource();\n  }\n\n  protected updateDataSource() {\n    const dataSource = this.dataSource as any;\n    dataSource.filters = this.getFilters();\n  }\n\n  getFilters() {\n    const filters = this.appliedFilters;\n    const filterArray = Object.keys(filters).map((key) => filters[key]);\n    return filterArray;\n  }\n\n  getFilter(columnName: string): any {\n    const filterColumn = this.getColumnByName(columnName);\n\n    if (!filterColumn) {\n      throw Error(`Column with name '${columnName}' does not exist.`);\n    }\n\n    return this.appliedFilters[filterColumn.name];\n  }\n\n  setFilter(columnName: string, filter: any) {\n    const filterColumn = this.getColumnByName(columnName);\n\n    if (!filterColumn) {\n      throw Error(`Cannot set filter for a column. Column with name '${columnName}' does not exist.`);\n    }\n\n    this.appliedFilters[filterColumn.name] = filter;\n    this.updateDataSource();\n  }\n\n  private getColumnByName(columnName: string): ColumnConfig {\n    return this.columns.find(c =>\n      (c.name ? c.name.toLowerCase() : c.name) === (columnName ? columnName.toLowerCase() : columnName)\n    );\n  }\n}","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n    selector: '[mdtCellHost]',\n})\nexport class CellDirective {\n    constructor(public viewContainerRef: ViewContainerRef) {}\n}","export class ColumnConfig {\r\n    name?: string;\r\n    displayName?: string;\r\n    type: string;\r\n    options?: any;\r\n    sticky?: string;\r\n    sort?: boolean;\r\n}","import { Component, Input } from '@angular/core';\nimport { CellComponent } from './cell.component';\nimport { ColumnConfig } from '../../column-config.model';\n\n@Component({\n    selector: 'mdt-text-cell',\n    template: '{{ row[column.name] }}'\n})\nexport class TextCellComponent implements CellComponent {\n    @Input() column: ColumnConfig;\n    @Input() row: object;\n}","import { Type } from '@angular/core';\nimport { TextCellComponent } from './text-cell.component';\n\nexport class CellService {\n\n    private registeredCells: { [key: string]: Type<any>; } = {};\n    \n    registerCell(type: string, component: Type<any>) {\n        this.registeredCells[type] = component;\n    }\n\n    getCell(type: string): Type<any> {\n        const component = this.registeredCells[type];\n\n        if (component == null) {\n            return TextCellComponent;\n        }\n\n        return component;\n    }\n}","import { Component, ComponentFactoryResolver, Input, ViewChild, OnInit } from '@angular/core';\nimport { CellDirective } from './cell.directive';\nimport { CellService } from './cell-types/cell.service';\nimport { CellComponent } from './cell-types/cell.component';\nimport { ColumnConfig } from '../column-config.model';\n\n@Component({\n    selector: 'mdt-table-cell',\n    template: '<ng-template mdtCellHost></ng-template>'\n})\nexport class TableCellComponent implements OnInit {\n    @ViewChild(CellDirective) cellHost: CellDirective;\n\n    @Input() row: object;\n    @Input() column: ColumnConfig;\n\n    constructor(\n        private readonly cellService: CellService,\n        private readonly componentFactoryResolver: ComponentFactoryResolver) { }\n\n    ngOnInit() {\n        this.initCell();\n    }\n\n    initCell() {\n        const cellComponent = this.cellService.getCell(this.column.type);\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(cellComponent);\n        const viewContainerRef = this.cellHost.viewContainerRef;\n        viewContainerRef.clear();\n        const componentRef = viewContainerRef.createComponent(componentFactory);\n        const cell = componentRef.instance as CellComponent;\n        cell.row = this.row;\n        cell.column = this.column;\n    }\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { CellComponent } from './cell.component';\nimport { ColumnConfig } from '../../column-config.model';\n\n@Component({\n    selector: 'mdt-date-cell',\n    template: '{{ row[column.name] | date:dateFormat }}'\n})\nexport class DateCellComponent implements CellComponent, OnInit {\n    @Input() column: ColumnConfig;\n    @Input() row: object;\n\n    dateFormat = 'short';\n\n    ngOnInit() {\n        if (this.column.options) {\n            if (this.column.options.dateFormat) {\n                this.dateFormat = this.column.options.dateFormat;\n            }\n        }\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule,\n  MatIconModule,\n  MatDialogModule,\n  MatTooltipModule\n} from '@angular/material';\n\nimport { DynamicTableComponent } from './dynamic-table.component';\nimport { TableCellComponent } from './table-cell/table-cell.component';\n\nimport { CellService } from './table-cell/cell-types/cell.service';\nimport { CellDirective } from './table-cell/cell.directive';\nimport { ColumnFilterService } from './table-cell/cell-types/column-filter.service';\n\nexport { CellService, CellDirective, ColumnFilterService };\nexport { CellComponent } from './table-cell/cell-types/cell.component';\nexport { ColumnFilter } from './column-filter.model';\nexport { ColumnConfig } from './column-config.model';\nexport { FilterDescription } from './filter-description';\n\nimport { TextCellComponent } from './table-cell/cell-types/text-cell.component';\nimport { DateCellComponent } from './table-cell/cell-types/date-cell.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatIconModule,\n    MatDialogModule,\n    MatTooltipModule\n  ],\n  declarations: [\n    DynamicTableComponent,\n    TableCellComponent,\n    CellDirective,\n    TextCellComponent,\n    DateCellComponent\n  ],\n  exports: [DynamicTableComponent],\n  entryComponents: [\n    TextCellComponent,\n    DateCellComponent\n  ],\n  providers: [\n    CellService,\n    ColumnFilterService\n  ]\n})\nexport class DynamicTableModule {\n  constructor(private readonly cellService: CellService) {\n    cellService.registerCell('string', TextCellComponent);\n    cellService.registerCell('date', DateCellComponent);\n  }\n}\n"],"names":[],"mappings":"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"}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ComponentFactoryResolver, Input, ViewChild } from '@angular/core';
import { CellDirective } from './cell.directive';
import { CellService } from './cell-types/cell.service';
import { ColumnConfig } from '../column-config.model';
var TableCellComponent = /** @class */ (function () {
    function TableCellComponent(cellService, componentFactoryResolver) {
        this.cellService = cellService;
        this.componentFactoryResolver = componentFactoryResolver;
    }
    /**
     * @return {?}
     */
    TableCellComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.initCell();
    };
    /**
     * @return {?}
     */
    TableCellComponent.prototype.initCell = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var cellComponent = this.cellService.getCell(this.column.type);
        /** @type {?} */
        var componentFactory = this.componentFactoryResolver.resolveComponentFactory(cellComponent);
        /** @type {?} */
        var viewContainerRef = this.cellHost.viewContainerRef;
        viewContainerRef.clear();
        /** @type {?} */
        var componentRef = viewContainerRef.createComponent(componentFactory);
        /** @type {?} */
        var cell = (/** @type {?} */ (componentRef.instance));
        cell.row = this.row;
        cell.column = this.column;
    };
    TableCellComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mdt-table-cell',
                    template: '<ng-template mdtCellHost></ng-template>'
                }] }
    ];
    /** @nocollapse */
    TableCellComponent.ctorParameters = function () { return [
        { type: CellService },
        { type: ComponentFactoryResolver }
    ]; };
    TableCellComponent.propDecorators = {
        cellHost: [{ type: ViewChild, args: [CellDirective,] }],
        row: [{ type: Input }],
        column: [{ type: Input }]
    };
    return TableCellComponent;
}());
export { TableCellComponent };
if (false) {
    /** @type {?} */
    TableCellComponent.prototype.cellHost;
    /** @type {?} */
    TableCellComponent.prototype.row;
    /** @type {?} */
    TableCellComponent.prototype.column;
    /**
     * @type {?}
     * @private
     */
    TableCellComponent.prototype.cellService;
    /**
     * @type {?}
     * @private
     */
    TableCellComponent.prototype.componentFactoryResolver;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtY2VsbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXRlcmlhbC1keW5hbWljLXRhYmxlLyIsInNvdXJjZXMiOlsibGliL3RhYmxlLWNlbGwvdGFibGUtY2VsbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsd0JBQXdCLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUM5RixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRXhELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV0RDtJQVVJLDRCQUNxQixXQUF3QixFQUN4Qix3QkFBa0Q7UUFEbEQsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFDeEIsNkJBQXdCLEdBQXhCLHdCQUF3QixDQUEwQjtJQUFJLENBQUM7Ozs7SUFFNUUscUNBQVE7OztJQUFSO1FBQ0ksSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3BCLENBQUM7Ozs7SUFFRCxxQ0FBUTs7O0lBQVI7O1lBQ1UsYUFBYSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDOztZQUMxRCxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsd0JBQXdCLENBQUMsdUJBQXVCLENBQUMsYUFBYSxDQUFDOztZQUN2RixnQkFBZ0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLGdCQUFnQjtRQUN2RCxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7WUFDbkIsWUFBWSxHQUFHLGdCQUFnQixDQUFDLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQzs7WUFDakUsSUFBSSxHQUFHLG1CQUFBLFlBQVksQ0FBQyxRQUFRLEVBQWlCO1FBQ25ELElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztRQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDOUIsQ0FBQzs7Z0JBM0JKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixRQUFRLEVBQUUseUNBQXlDO2lCQUN0RDs7OztnQkFQUSxXQUFXO2dCQUZBLHdCQUF3Qjs7OzJCQVd2QyxTQUFTLFNBQUMsYUFBYTtzQkFFdkIsS0FBSzt5QkFDTCxLQUFLOztJQW9CVix5QkFBQztDQUFBLEFBNUJELElBNEJDO1NBeEJZLGtCQUFrQjs7O0lBQzNCLHNDQUFrRDs7SUFFbEQsaUNBQXFCOztJQUNyQixvQ0FBOEI7Ozs7O0lBRzFCLHlDQUF5Qzs7Ozs7SUFDekMsc0RBQW1FIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIElucHV0LCBWaWV3Q2hpbGQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2VsbERpcmVjdGl2ZSB9IGZyb20gJy4vY2VsbC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ2VsbFNlcnZpY2UgfSBmcm9tICcuL2NlbGwtdHlwZXMvY2VsbC5zZXJ2aWNlJztcbmltcG9ydCB7IENlbGxDb21wb25lbnQgfSBmcm9tICcuL2NlbGwtdHlwZXMvY2VsbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29sdW1uQ29uZmlnIH0gZnJvbSAnLi4vY29sdW1uLWNvbmZpZy5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbWR0LXRhYmxlLWNlbGwnLFxuICAgIHRlbXBsYXRlOiAnPG5nLXRlbXBsYXRlIG1kdENlbGxIb3N0PjwvbmctdGVtcGxhdGU+J1xufSlcbmV4cG9ydCBjbGFzcyBUYWJsZUNlbGxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIEBWaWV3Q2hpbGQoQ2VsbERpcmVjdGl2ZSkgY2VsbEhvc3Q6IENlbGxEaXJlY3RpdmU7XG5cbiAgICBASW5wdXQoKSByb3c6IG9iamVjdDtcbiAgICBASW5wdXQoKSBjb2x1bW46IENvbHVtbkNvbmZpZztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGNlbGxTZXJ2aWNlOiBDZWxsU2VydmljZSxcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBjb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcikgeyB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5pbml0Q2VsbCgpO1xuICAgIH1cblxuICAgIGluaXRDZWxsKCkge1xuICAgICAgICBjb25zdCBjZWxsQ29tcG9uZW50ID0gdGhpcy5jZWxsU2VydmljZS5nZXRDZWxsKHRoaXMuY29sdW1uLnR5cGUpO1xuICAgICAgICBjb25zdCBjb21wb25lbnRGYWN0b3J5ID0gdGhpcy5jb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoY2VsbENvbXBvbmVudCk7XG4gICAgICAgIGNvbnN0IHZpZXdDb250YWluZXJSZWYgPSB0aGlzLmNlbGxIb3N0LnZpZXdDb250YWluZXJSZWY7XG4gICAgICAgIHZpZXdDb250YWluZXJSZWYuY2xlYXIoKTtcbiAgICAgICAgY29uc3QgY29tcG9uZW50UmVmID0gdmlld0NvbnRhaW5lclJlZi5jcmVhdGVDb21wb25lbnQoY29tcG9uZW50RmFjdG9yeSk7XG4gICAgICAgIGNvbnN0IGNlbGwgPSBjb21wb25lbnRSZWYuaW5zdGFuY2UgYXMgQ2VsbENvbXBvbmVudDtcbiAgICAgICAgY2VsbC5yb3cgPSB0aGlzLnJvdztcbiAgICAgICAgY2VsbC5jb2x1bW4gPSB0aGlzLmNvbHVtbjtcbiAgICB9XG59Il19
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { ColumnConfig } from '../../column-config.model';
var DateCellComponent = /** @class */ (function () {
    function DateCellComponent() {
        this.dateFormat = 'short';
    }
    /**
     * @return {?}
     */
    DateCellComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.column.options) {
            if (this.column.options.dateFormat) {
                this.dateFormat = this.column.options.dateFormat;
            }
        }
    };
    DateCellComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mdt-date-cell',
                    template: '{{ row[column.name] | date:dateFormat }}'
                }] }
    ];
    DateCellComponent.propDecorators = {
        column: [{ type: Input }],
        row: [{ type: Input }]
    };
    return DateCellComponent;
}());
export { DateCellComponent };
if (false) {
    /** @type {?} */
    DateCellComponent.prototype.column;
    /** @type {?} */
    DateCellComponent.prototype.row;
    /** @type {?} */
    DateCellComponent.prototype.dateFormat;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1jZWxsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21hdGVyaWFsLWR5bmFtaWMtdGFibGUvIiwic291cmNlcyI6WyJsaWIvdGFibGUtY2VsbC9jZWxsLXR5cGVzL2RhdGUtY2VsbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBRXpELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUV6RDtJQUFBO1FBUUksZUFBVSxHQUFHLE9BQU8sQ0FBQztJQVN6QixDQUFDOzs7O0lBUEcsb0NBQVE7OztJQUFSO1FBQ0ksSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRTtZQUNyQixJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRTtnQkFDaEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUM7YUFDcEQ7U0FDSjtJQUNMLENBQUM7O2dCQWhCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLGVBQWU7b0JBQ3pCLFFBQVEsRUFBRSwwQ0FBMEM7aUJBQ3ZEOzs7eUJBRUksS0FBSztzQkFDTCxLQUFLOztJQVdWLHdCQUFDO0NBQUEsQUFqQkQsSUFpQkM7U0FiWSxpQkFBaUI7OztJQUMxQixtQ0FBOEI7O0lBQzlCLGdDQUFxQjs7SUFFckIsdUNBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi9jZWxsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb2x1bW5Db25maWcgfSBmcm9tICcuLi8uLi9jb2x1bW4tY29uZmlnLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdtZHQtZGF0ZS1jZWxsJyxcbiAgICB0ZW1wbGF0ZTogJ3t7IHJvd1tjb2x1bW4ubmFtZV0gfCBkYXRlOmRhdGVGb3JtYXQgfX0nXG59KVxuZXhwb3J0IGNsYXNzIERhdGVDZWxsQ29tcG9uZW50IGltcGxlbWVudHMgQ2VsbENvbXBvbmVudCwgT25Jbml0IHtcbiAgICBASW5wdXQoKSBjb2x1bW46IENvbHVtbkNvbmZpZztcbiAgICBASW5wdXQoKSByb3c6IG9iamVjdDtcblxuICAgIGRhdGVGb3JtYXQgPSAnc2hvcnQnO1xuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbHVtbi5vcHRpb25zKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5jb2x1bW4ub3B0aW9ucy5kYXRlRm9ybWF0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kYXRlRm9ybWF0ID0gdGhpcy5jb2x1bW4ub3B0aW9ucy5kYXRlRm9ybWF0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSJdfQ==